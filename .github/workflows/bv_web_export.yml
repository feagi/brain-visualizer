name: "Push bridge and update versions"

on:
  push:
    branches:
      - staging
    paths:
      - 'godot_source/**'
  workflow_dispatch:

env:
  GODOT_VERSION: 4.1.1
  EXPORT_NAME: Web


 
jobs:
  export-web:
    name: Web Export
    runs-on: ubuntu-20.04
    if: github.repository == 'feagi/brain-visualizer' || github.repository == 'Neuraville/nrs-brain-visualizer'
    container:
      image: barichello/godot-ci:4.1.1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Merge in New Changes
        run: |
          # Set up Git
          git config --global user.name "BrainVisualizerPushAction"
          git config --global user.email "BrainVisualizerPushAction@neuraville.com"
          git config --global --add safe.directory /__w/brain-visualizer/brain-visualizer
          echo "set vars"
          git fetch origin
          git checkout -b temp
       - name: Set Compile Time
          run: |
            cd src
            ./version_generate.sh
      - name: Setup for Build
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      
      - name: Create Build Directory
        run: |
            mkdir -v -p build/web
            cd $PROJECT_PATH

      - name: Set Compile Time
        run: |
          chmod +x ./set_timestamp.sh
          ./set_timestamp.sh
      - name: Web Build
        run: |
          godot -v --rendering-driver opengl3 --headless --export-release "HTML5" /__w/brain-visualizer/brain-visualizer/html/index.html
      - name: Push Web Export
        run: |
          git add .
          git commit -m "Updated Web Export"
          echo "committed"
          git push origin temp:pre-release --force
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./
          platforms: linux/amd64,linux/arm64
          push: true
          tags: neuraville/bridge:latest
          
          
